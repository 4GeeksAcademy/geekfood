"""empty message

Revision ID: 71ab5af0f837
Revises: 7a44f5e222fb
Create Date: 2024-07-31 21:31:19.843994

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '71ab5af0f837'
down_revision = '7a44f5e222fb'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('profiles', schema=None) as batch_op:
        batch_op.drop_column('email')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint('users_address_key', type_='unique')
        batch_op.drop_constraint('users_avatar_key', type_='unique')
        batch_op.drop_constraint('users_name_key', type_='unique')
        batch_op.drop_constraint('users_phone_key', type_='unique')
        batch_op.drop_constraint('users_rut_key', type_='unique')
        batch_op.drop_column('avatar')
        batch_op.drop_column('phone')
        batch_op.drop_column('name')
        batch_op.drop_column('address')
        batch_op.drop_column('rut')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('rut', sa.VARCHAR(length=120), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('address', sa.VARCHAR(length=120), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('name', sa.VARCHAR(length=120), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('phone', sa.VARCHAR(length=120), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('avatar', sa.VARCHAR(length=120), autoincrement=False, nullable=False))
        batch_op.create_unique_constraint('users_rut_key', ['rut'])
        batch_op.create_unique_constraint('users_phone_key', ['phone'])
        batch_op.create_unique_constraint('users_name_key', ['name'])
        batch_op.create_unique_constraint('users_avatar_key', ['avatar'])
        batch_op.create_unique_constraint('users_address_key', ['address'])

    with op.batch_alter_table('profiles', schema=None) as batch_op:
        batch_op.add_column(sa.Column('email', sa.TEXT(), autoincrement=False, nullable=True))

    # ### end Alembic commands ###
